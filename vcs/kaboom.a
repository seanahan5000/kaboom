
; TODO: these should show up in special color
; TODO: hover should give definition (from comment?)

; write addresses
vsync           =   $00
vblank          =   $01
wsync           =   $02
rsync           =   $03
nusiz0          =   $04
nusiz1          =   $05
colup0          =   $06
colup1          =   $07
colupf          =   $08
colubk          =   $09
ctrlpf          =   $0A
refp0           =   $0B
refp1           =   $0C
pf0             =   $0D
pf1             =   $0E
pf2             =   $0F
resp0           =   $10
resp1           =   $11
resm0           =   $12
resm1           =   $13
resbl           =   $14
audc0           =   $15
audc1           =   $16
audf0           =   $17
audf1           =   $18
audv0           =   $19
audv1           =   $1A
grp0            =   $1B
grp1            =   $1C
enam0           =   $1D
enam1           =   $1E
enabl           =   $1F
hmp0            =   $20
hmp1            =   $21
hmm0            =   $22
hmm1            =   $23
hmbl            =   $24
vdelp0          =   $25
vdelp1          =   $26
vdelbl          =   $27
resmp0          =   $28
resmp1          =   $29
hmove           =   $2A
hmclr           =   $2B
cxclr           =   $2C

swcha           =   $0280
swacnt          =   $0281
swchb           =   $0282
swbcnt          =   $0283
intim           =   $0284
tim1t           =   $0294
tim8t           =   $0295
tim64t          =   $0296
tim1024t        =   $0297

; read addresses
cxm0p           =   $00
cxm1p           =   $01
cxp0fb          =   $02
cxp1fb          =   $03
cxm0fb          =   $04
cxm1fb          =   $05
cxblpf          =   $06
cxppmm          =   $07
inpt0           =   $08
inpt1           =   $09
inpt2           =   $0a
inpt3           =   $0b
inpt4           =   $0c
inpt5           =   $0d

CONSOLE_RESET   =   %00000001           ; 0 means reset (start game)
CONSOLE_SELECT  =   %00000010           ; 0 means select next game
CONSOLE_COLOR   =   %00001000           ; 1 means color, 0 means B&W
CONSOLE_DIFF1   =   %01000000           ; 1 means difficult
CONSOLE_DIFF2   =   %10000000           ; 1 means difficult

PLAYER0_UP      =   %00010000
PLAYER0_DOWN    =   %00100000
PLAYER0_LEFT    =   %01000000
PLAYER0_RIGHT   =   %10000000
PLAYER1_UP      =   %00000001
PLAYER1_DOWN    =   %00000010
PLAYER1_LEFT    =   %00000100
PLAYER1_RIGHT   =   %00001000

PADDLE0_BUTTON  =   %10000000
PADDLE1_BUTTON  =   %01000000
PADDLE2_BUTTON  =   %00001000
PADDLE3_BUTTON  =   %00000100


; $80 & 0x80 = input recipient (0 = bucket, 1 = bomber)
; $80 & 0x40 = current primary player
; $80 & 0x20 = in reset
; $80 & 0x02 = controllable bomber
; $80 & 0x01 = number of players

; $A0 = current input source (paddle 0 or 1)


; $80 = number of players (0x01)
;     = in reset (0x80) *** is this right? 0x20 above ***
vblankCount     =   $81                 ; vblank count (0-255)
randomSeed      =   $82                 ; random number seed value
saverColorEor   =   $83                 ; screen saver color EOR value
saverColorAnd   =   $84                 ; screen saver color AND value

; table of color values (must be contiguous)
; $85 = background color (top)
; $86 = background color (center)
; $87 = color for player 0 score, temp
; $88 = color for player 1 score, temp
; $89-$97 = bomb color buffer

; $98 = relative bucket position in shifts/loops
; $99 = relative bomber position in shifts/loops
bomberX         =   $9A                 ; absolute bomber X position
bomberDir       =   $9B                 ; bomber direction sign (high bit)
splashingBucket =   $9C                 ; splashing bucket (0-3)
bucketX         =   $9D                 ; absolute bucket X position
; $9E = vblank high byte counter/screen saver counter
; $9F = delay counter when select switch pressed

playerNum       =   $A0                 ; current player (0 or 1)

playerState     =   $A1
playerBuckets   =   $A1                 ; bucket count (0-3) of current player
playerWaveNum   =   $A2                 ; wave number (0-7) of current player
playerScore     =   $A3                 ; ($A3-$A5) score of current player

otherState      =   $A6
otherBuckets    =   $A6                 ; bucket count (0-3) of other player
otherWaveNum    =   $A7                 ; wave number (0-7) of other player
otherScore      =   $A8                 ; ($A8-$AA) score of other player

bombCount       =   $AB                 ; bombs dropped
expBombIndex    =   $AC                 ; index of exploding bomb
; $AD = game/player state???
expBombFrame    =   $AE                 ; exploding bomb frame counter
splashFrame     =   $AF                 ; splash frame (0000XX00)

soundDuration   =   $B0                 ; sound duration
; $B1 = speed adjusted position of bomber?
; $B2 = hpos of bomb (held by bomber)
;     = (XXXX0000) hmove value -8 to +7
;     = (0000X000) reflect
;     = (00000XXX) delay loops before reset
; $B3-$BA = bomb positions
; $BB-$C2 = bomb status

; $C3 = ??? empty part of bucket buffer?
; $C4-$D3 = top bucket
; $D4-$E3 = center bucket
; $E4-$F3 = bottom bucket

; data pointers for drawing interleaved p0/p1 data
; $F4-$F5 = data pointer 0
; $F6-$F7 = data pointer 1
; $F8-$F9 = data pointer 2

; $FA-$FB = data pointer 3
; $FC-$FD = data pointer 4
; $FE-$FF = data pointer 5

; $F4 = (unused)
; $F5 = max X position for paddle
; $F6 = temp bomb index
; $F7 = paddle reading counter
; $F8 = bomb about to be caught
; $F9 = temp counter, data holder

reset   SEI                             ; 2     ; F000: 78
        CLD                             ; 2     ; F001: D8
        LDX #$00                        ; 2     ; F002: A2 00
        TXA                             ; 2     ; F004: 8A
B1005   STA vsync,X                     ; 4     ; F005: 95 00
        TXS                             ; 2     ; F007: 9A
        INX                             ; 2     ; F008: E8
        BNE B1005                       ; 2/3   ; F009: D0 FA
        JMP J13C1                       ; 3     ; F00B: 4C C1 F3

; preprocess bomb and background colors
J100E   LDX #$12                        ; 2     ; F00E: A2 12
B1010   LDA color_table,X               ; 4+    ; F010: BD 72 F6
        LDY expBombFrame                ; 3     ; F013: A4 AE
        CPY #$20                        ; 2     ; F015: C0 20
        BCC B1023                       ; 2/3   ; F017: 90 0A
        LDY expBombIndex                ; 3     ; F019: A4 AC
        BNE B1025                       ; 2/3   ; F01B: D0 08
        CPX #$04                        ; 2     ; F01D: E0 04
        BCC B1025                       ; 2/3   ; F01F: 90 04
        LDA randomSeed                  ; 3     ; F021: A5 82
B1023   EOR expBombFrame                ; 3     ; F023: 45 AE
B1025   EOR saverColorEor               ; 3     ; F025: 45 83
        AND saverColorAnd               ; 3     ; F027: 25 84
        STA $85,X                       ; 4     ; F029: 95 85
        DEX                             ; 2     ; F02B: CA
        BPL B1010                       ; 2/3   ; F02C: 10 E2

; choose score digit color
        STA colubk                      ; 3     ; F02E: 85 09
        LDX playerNum                   ; 3     ; F030: A6 A0
        LDA $87,X                       ; 4     ; F032: B5 87
        STA colup0                      ; 3     ; F034: 85 06
        STA colup1                      ; 3     ; F036: 85 07

; wait for end of vblank
B1038   LDA intim                       ; 4     ; F038: AD 84 02
        BNE B1038                       ; 2/3   ; F03B: D0 FB
        STA wsync                       ; 3     ; F03D: 85 02
        STA vblank                      ; 3     ; F03F: 85 01

; draw score
        STA colupf                      ; 3     ; F041: 85 08
        LDA #$35                        ; 2     ; F043: A9 35
        STA ctrlpf                      ; 3     ; F045: 85 0A
        STA pf0                         ; 3     ; F047: 85 0D
        LDY #$03                        ; 2     ; F049: A0 03
        STY nusiz0                      ; 3     ; F04B: 84 04
        STY nusiz1                      ; 3     ; F04D: 84 05
        LDY #$07                        ; 2     ; F04F: A0 07
        STY vdelp0                      ; 3     ; F051: 84 25
        STY vdelp1                      ; 3     ; F053: 84 26
B1055   STY $87                         ; 3     ; F055: 84 87
        LDA ($FE),Y                     ; 5+    ; F057: B1 FE
        STA $88                         ; 3     ; F059: 85 88
        STA wsync                       ; 3     ; F05B: 85 02
        LDA ($F4),Y                     ; 5+    ; F05D: B1 F4
        STA grp0                        ; 3     ; F05F: 85 1B
        LDA ($F6),Y                     ; 5+    ; F061: B1 F6
        STA grp1                        ; 3     ; F063: 85 1C
        LDA ($F8),Y                     ; 5+    ; F065: B1 F8
        STA grp0                        ; 3     ; F067: 85 1B
        LDA ($FC),Y                     ; 5+    ; F069: B1 FC
        TAX                             ; 2     ; F06B: AA
        LDA ($FA),Y                     ; 5+    ; F06C: B1 FA
        LDY $88                         ; 3     ; F06E: A4 88
        STA grp1                        ; 3     ; F070: 85 1C
        STX grp0                        ; 3     ; F072: 86 1B
        STY grp1                        ; 3     ; F074: 84 1C
        STA grp0                        ; 3     ; F076: 85 1B
        LDY $87                         ; 3     ; F078: A4 87
        DEY                             ; 2     ; F07A: 88
        BPL B1055                       ; 2/3   ; F07B: 10 D8
        INY                             ; 2     ; F07D: C8

; position bomb based on $B2
        LDA $BB                         ; 3     ; F07E: A5 BB
        STA $FA                         ; 3     ; F080: 85 FA
        LDA $B2                         ; 3     ; F082: A5 B2
        STA wsync                       ; 3     ; F084: 85 02
        STY vdelp0                      ; 3     ; F086: 84 25
        STY vdelp1                      ; 3     ; F088: 84 26
        STY grp0                        ; 3     ; F08A: 84 1B
        STY grp1                        ; 3     ; F08C: 84 1C
        STA refp0                       ; 3     ; F08E: 85 0B
        STA hmp0                        ; 3     ; F090: 85 20
        AND #$07                        ; 2     ; F092: 29 07
        TAX                             ; 2     ; F094: AA
B1095   DEX                             ; 2     ; F095: CA
        BPL B1095                       ; 2/3   ; F096: 10 FD
        STA resp0                       ; 3     ; F098: 85 10
        STA wsync                       ; 3     ; F09A: 85 02
        STY nusiz1                      ; 3     ; F09C: 84 05

; position bomber (or held bomb?) based on $99
        STY $F9                         ; 3     ; F09E: 84 F9
        STY nusiz0                      ; 3     ; F0A0: 84 04
        LDA $99                         ; 3     ; F0A2: A5 99
        STA hmp1                        ; 3     ; F0A4: 85 21
        AND #$07                        ; 2     ; F0A6: 29 07
        TAX                             ; 2     ; F0A8: AA
        LDA $B1                         ; 3     ; F0A9: A5 B1
B10AB   DEX                             ; 2     ; F0AB: CA
        BPL B10AB                       ; 2/3   ; F0AC: 10 FD
        STA resp1                       ; 3     ; F0AE: 85 11
        STA wsync                       ; 3     ; F0B0: 85 02
        STA hmove                       ; 3     ; F0B2: 85 2A
        LDX #$1F                        ; 2     ; F0B4: A2 1F
        ORA #$20                        ; 2     ; F0B6: 09 20
        TAY                             ; 2     ; F0B8: A8

; decide when bomber smiles or frowns
; go frown if ???
        LDA playerScore+0               ; 3     ; F0B9: A5 A3
        CMP #$01                        ; 2     ; F0BB: C9 01
        ROR $88                         ; 5     ; F0BD: 66 88
        BMI B10C9                       ; 2/3   ; F0BF: 30 08
; go smile if bombs exploding
        LDA expBombFrame                ; 3     ; F0C1: A5 AE
        BNE B10EF                       ; 2/3   ; F0C3: D0 2A
; go smile if buckets gone
        LDA playerBuckets               ; 3     ; F0C5: A5 A1
        BEQ B10EF                       ; 2/3   ; F0C7: F0 26

; draw bomber with frown
B10C9   LDA bomber_colors,X             ; 4+    ; F0C9: BD 52 F6
        EOR saverColorEor               ; 3     ; F0CC: 45 83
        AND saverColorAnd               ; 3     ; F0CE: 25 84
        STA wsync                       ; 3     ; F0D0: 85 02
        STA colup1                      ; 3     ; F0D2: 85 07
        LDA bomber_bits,X               ; 4+    ; F0D4: BD D3 F6
        CPX #$16                        ; 2     ; F0D7: E0 16
        BNE B10DD                       ; 2/3   ; F0D9: D0 02
        LDA #%01101100                  ; 2     ; F0DB: A9 6C
B10DD   BCS B10E7                       ; 2/3   ; F0DD: B0 08
        LDA #%01101100                  ; 2     ; F0DF: A9 6C
        BIT $88                         ; 3     ; F0E1: 24 88
        BMI B10E7                       ; 2/3   ; F0E3: 30 02
        LDA #%01010100                  ; 2     ; F0E5: A9 54
B10E7   STA grp1                        ; 3     ; F0E7: 85 1C
        DEY                             ; 2     ; F0E9: 88
        DEX                             ; 2     ; F0EA: CA
        CPX #$15                        ; 2     ; F0EB: E0 15
        BCS B10C9                       ; 2/3   ; F0ED: B0 DA

; draw rest of bomber and bomb
B10EF   LDA bomber_colors,X             ; 4+    ; F0EF: BD 52 F6
        EOR saverColorEor               ; 3     ; F0F2: 45 83
        AND saverColorAnd               ; 3     ; F0F4: 25 84
        CPX #$03                        ; 2     ; F0F6: E0 03
        BNE B1103                       ; 2/4   ; F0F8: D0 09
        LDA $86                         ; 3     ; F0FA: A5 86
        STA wsync                       ; 3     ; F0FC: 85 02
        STA colubk                      ; 3     ; F0FE: 85 09
        JMP J110C                       ; 3     ; F100: 4C 0C F1

B1103   STA wsync                       ; 3     ; F103: 85 02
        STA colup1                      ; 3     ; F105: 85 07
        LDA bomber_bits,X               ; 4+    ; F107: BD D3 F6
        STA grp1                        ; 3     ; F10A: 85 1C
J110C   LDA L0088,Y                     ; 4+    ; F10C: B9 88 00
        STA colup0                      ; 3     ; F10F: 85 06
        LDA $F9                         ; 3     ; F111: A5 F9
        STA grp0                        ; 3     ; F113: 85 1B
        DEY                             ; 2     ; F115: 88
        CPY #$10                        ; 2     ; F116: C0 10
        BCS B111E                       ; 2/3   ; F118: B0 04
        LDA ($FA),Y                     ; 5+    ; F11A: B1 FA
        STA $F9                         ; 3     ; F11C: 85 F9
B111E   DEX                             ; 2     ; F11E: CA
        BPL B10EF                       ; 2/4   ; F11F: 10 CE

; check difficulty for current player and adjust bucket size
        LDA swchb                       ; 4     ; F121: AD 82 02
        LDX playerNum                   ; 3     ; F124: A6 A0
        BNE B1129                       ; 2/3   ; F126: D0 01
        ASL A                           ; 2     ; F128: 0A
B1129   ASL A                           ; 2     ; F129: 0A
        LDA #$00                        ; 2     ; F12A: A9 00
        STA $F6                         ; 3     ; F12C: 85 F6
        BCS B1132                       ; 2/3   ; F12E: B0 02
        LDA #$05                        ; 2     ; F130: A9 05
B1132   STA wsync                       ; 3     ; F132: 85 02
        STA nusiz1                      ; 3     ; F134: 85 05

        LDA L0088,Y                     ; 4+    ; F136: B9 88 00
        STA colup0                      ; 3     ; F139: 85 06
        LDA $F9                         ; 3     ; F13B: A5 F9
        STA grp0                        ; 3     ; F13D: 85 1B
        LDA #$00                        ; 2     ; F13F: A9 00
        STA grp1                        ; 3     ; F141: 85 1C
        STA cxclr                       ; 3     ; F143: 85 2C
        BCC B1149                       ; 2/3   ; F145: 90 02
        LDA #$10                        ; 2     ; F147: A9 0A
B1149   CLC                             ; 2     ; F149: 18
        ADC #108                        ; 2     ; F14A: 69 6C
; bucket max X is #108 for easy mode, #118 for hard mode
        STA $F5                         ; 3     ; F14C: 85 F5
        ADC #$06                        ; 2     ; F14E: 69 06
        STA $F7                         ; 3     ; F150: 85 F7

; ??? is this vertical bomb phase adjustment?
        LDA #$55                        ; 2     ; F152: A9 55
        STA $87                         ; 3     ; F154: 85 87
        DEY                             ; 2     ; F156: 88
        BMI B117A                       ; 2/3   ; F157: 30 21
B1159   CPY #$10                        ; 2     ; F159: C0 10
        BCC B1164                       ; 2/3   ; F15B: 90 07
        STA wsync                       ; 3     ; F15D: 85 02
        DEC $87                         ; 5     ; F15F: C6 87
        DEY                             ; 2     ; F161: 88
        BNE B1159                       ; 2/3   ; F162: D0 F5

B1164   LDA ($FA),Y                     ; 5+    ; F164: B1 FA
        STA wsync                       ; 3     ; F166: 85 02
        STA grp0                        ; 3     ; F168: 85 1B
        LDA L0088,Y                     ; 4+    ; F16A: B9 88 00
        STA colup0                      ; 3     ; F16D: 85 06
        DEC $87                         ; 5     ; F16F: C6 87
        LDA inpt0,X                     ; 4     ; F171: B5 08
        BMI B1177                       ; 2/3   ; F173: 30 02
        DEC $F7                         ; 5     ; F175: C6 F7
B1177   DEY                             ; 2     ; F177: 88
        BPL B1164                       ; 2/3   ; F178: 10 EA

B117A   STA wsync                       ; 3     ; F17A: 85 02
        INC $F6                         ; 5     ; F17C: E6 F6
        LDY $F6                         ; 3     ; F17E: A4 F6
        LDA L00B2,Y                     ; 4+    ; F180: B9 B2 00
        STA hmp0                        ; 3     ; F183: 85 20
        STA refp0                       ; 3     ; F185: 85 0B
        AND #$07                        ; 2     ; F187: 29 07
        TAY                             ; 2     ; F189: A8
B118A   DEY                             ; 2     ; F18A: 88
        BPL B118A                       ; 2/3   ; F18B: 10 FD
        STA resp0                       ; 3     ; F18D: 85 10
        STA wsync                       ; 3     ; F18F: 85 02
        LDY $F6                         ; 3     ; F191: A4 F6
        LDA L00BB,Y                     ; 4+    ; F193: B9 BB 00
        STA $FA                         ; 3     ; F196: 85 FA
        NOP                             ; 2     ; F198: EA
        LDA $98                         ; 3     ; F199: A5 98
        STA hmp1                        ; 3     ; F19B: 85 21
        AND #$07                        ; 2     ; F19D: 29 07
        TAY                             ; 2     ; F19F: A8
B11A0   DEY                             ; 2     ; F1A0: 88
        BPL B11A0                       ; 2/3   ; F1A1: 10 FD
        STA resp1                       ; 3     ; F1A3: 85 11
        STA wsync                       ; 3     ; F1A5: 85 02
        STA hmove                       ; 3     ; F1A7: 85 2A
        LDY #$0F                        ; 2     ; F1A9: A0 0F
        LDA ($FA),Y                     ; 5+    ; F1AB: B1 FA
        STA grp0                        ; 3     ; F1AD: 85 1B
        LDA L0088,Y                     ; 4+    ; F1AF: B9 88 00
        STA colup0                      ; 3     ; F1B2: 85 06
        LDA inpt0,X                     ; 4     ; F1B4: B5 08
        BMI B11BA                       ; 2/3   ; F1B6: 30 02
        DEC $F7                         ; 5     ; F1B8: C6 F7
B11BA   DEY                             ; 2     ; F1BA: 88
        STA hmclr                       ; 3     ; F1BB: 85 2B
B11BD   LDA $F6                         ; 3     ; F1BD: A5 F6
        CMP expBombIndex                ; 3     ; F1BF: C5 AC
        BNE B11C8                       ; 2/3   ; F1C1: D0 05
        LDA randomSeed                  ; 3     ; F1C3: A5 82
        STA L0088,Y                     ; 5+    ; F1C5: 99 88 00
B11C8   LDA ($FA),Y                     ; 5+    ; F1C8: B1 FA
        STA wsync                       ; 3     ; F1CA: 85 02
        STA grp0                        ; 3     ; F1CC: 85 1B
        LDA L0088,Y                     ; 4+    ; F1CE: B9 88 00
        STA colup0                      ; 3     ; F1D1: 85 06
B11D3   DEC $87                         ; 5     ; F1D3: C6 87
        BEQ B1209                       ; 2/4   ; F1D5: F0 32
        LDA inpt0,X                     ; 4     ; F1D7: B5 08
        BMI B11DD                       ; 2/3   ; F1D9: 30 02
        DEC $F7                         ; 5     ; F1DB: C6 F7
B11DD   DEY                             ; 2     ; F1DD: 88
        BPL B11BD                       ; 2/3   ; F1DE: 10 DD
        INC $F6                         ; 5     ; F1E0: E6 F6
        LDY $F6                         ; 3     ; F1E2: A4 F6
        LDA L00BB,Y                     ; 4+    ; F1E4: B9 BB 00
        STA wsync                       ; 3     ; F1E7: 85 02
        NOP                             ; 2     ; F1E9: EA
        STA $FA                         ; 3     ; F1EA: 85 FA
        STY $F8                         ; 3     ; F1EC: 84 F8
        LDA L00B2,Y                     ; 4+    ; F1EE: B9 B2 00
        STA hmp0                        ; 3     ; F1F1: 85 20
        STA refp0                       ; 3     ; F1F3: 85 0B
        AND #$07                        ; 2     ; F1F5: 29 07
        TAY                             ; 2     ; F1F7: A8
B11F8   DEY                             ; 2     ; F1F8: 88
        BPL B11F8                       ; 2/3   ; F1F9: 10 FD
        STA resp0                       ; 3     ; F1FB: 85 10
        STA wsync                       ; 3     ; F1FD: 85 02
        STA hmove                       ; 3     ; F1FF: 85 2A
        LDY #$10                        ; 2     ; F201: A0 10
        DEC $87                         ; 5     ; F203: C6 87
        BEQ B1210                       ; 2/3   ; F205: F0 09
        BNE B11D3       ;always         ; 2/4   ; F207: D0 CA

B1209   LDX #$30                        ; 2     ; F209: A2 30
        DEY                             ; 2     ; F20B: 88
        BMI B1254                       ; 2/3   ; F20C: 30 46
        BPL B121F       ;always         ; 2/3   ; F20E: 10 0F

; start of bucket drawing
B1210   DEY                             ; 2     ; F210: 88
        LDX #$2F                        ; 2     ; F211: A2 2F
B1213   STX $88                         ; 3     ; F213: 86 88
        LDX playerNum                   ; 3     ; F215: A6 A0
        LDA inpt0,X                     ; 4     ; F217: B5 08
        BMI B121D                       ; 2/3   ; F219: 30 02
        DEC $F7                         ; 5     ; F21B: C6 F7
B121D   LDX $88                         ; 3     ; F21D: A6 88
B121F   LDA $F6                         ; 3     ; F21F: A5 F6
        CMP expBombIndex                ; 3     ; F221: C5 AC
        BNE B1236                       ; 2/3   ; F223: D0 11
        LDA bucket_colors-1,X           ; 4+    ; F225: BD 84 F6
        AND saverColorAnd               ; 3     ; F228: 25 84
        STA wsync                       ; 3     ; F22A: 85 02
        STA colup1                      ; 3     ; F22C: 85 07
        LDA L0082                       ; 4     ; F22E: AD 82 00
        STA colup0                      ; 3     ; F231: 85 06
        JMP J1246                       ; 3     ; F233: 4C 46 F2

B1236   LDA bucket_colors-1,X           ; 4+    ; F236: BD 84 F6
        EOR saverColorEor               ; 3     ; F239: 45 83
        AND saverColorAnd               ; 3     ; F23B: 25 84
        STA wsync                       ; 3     ; F23D: 85 02
        STA colup1                      ; 3     ; F23F: 85 07
        LDA L0088,Y                     ; 4+    ; F241: B9 88 00
        STA colup0                      ; 3     ; F244: 85 06
J1246   LDA $C3,X                       ; 4     ; F246: B5 C3
        STA grp1                        ; 3     ; F248: 85 1C
        LDA ($FA),Y                     ; 5+    ; F24A: B1 FA
        STA grp0                        ; 3     ; F24C: 85 1B
        DEX                             ; 2     ; F24E: CA
        BEQ B129A                       ; 2/3   ; F24F: F0 49
        DEY                             ; 2     ; F251: 88
B1252   BPL B1213                       ; 2/3   ; F252: 10 BF
B1254   INC $F6                         ; 5     ; F254: E6 F6
        LDY $F6                         ; 3     ; F256: A4 F6
; if bomb touched bucket, save index
        BIT cxppmm                      ; 3     ; F258: 24 07
        BMI B125E                       ; 2/3   ; F25A: 30 02
        STY $F8                         ; 3     ; F25C: 84 F8
B125E   LDA L00BB,Y                     ; 4+    ; F25E: B9 BB 00
        STA $FA                         ; 3     ; F261: 85 FA
        LDA L00B2,Y                     ; 4+    ; F263: B9 B2 00
        STA hmp0                        ; 3     ; F266: 85 20
        STA refp0                       ; 3     ; F268: 85 0B
        AND #$07                        ; 2     ; F26A: 29 07
        STA wsync                       ; 3     ; F26C: 85 02
        TAY                             ; 2     ; F26E: A8
        LDA bucket_colors-1,X           ; 4+    ; F26F: BD 84 F6
        EOR saverColorEor               ; 3     ; F272: 45 83
        AND saverColorAnd               ; 3     ; F274: 25 84
        STA colup1                      ; 3     ; F276: 85 07
        LDA $C3,X                       ; 4     ; F278: B5 C3
        STA grp1                        ; 3     ; F27A: 85 1C
B127C   DEY                             ; 2     ; F27C: 88
        BPL B127C                       ; 2/3   ; F27D: 10 FD
        STA resp0                       ; 3     ; F27F: 85 10
        LDA bucket_colors-2,X           ; 4+    ; F281: BD 83 F6
        EOR saverColorEor               ; 3     ; F284: 45 83
        STA wsync                       ; 3     ; F286: 85 02
        STA hmove                       ; 3     ; F288: 85 2A
        DEX                             ; 2     ; F28A: CA
        BEQ B129C                       ; 2/3   ; F28B: F0 0F
        AND saverColorAnd               ; 3     ; F28D: 25 84
        STA colup1                      ; 3     ; F28F: 85 07
        LDA $C3,X                       ; 4     ; F291: B5 C3
        STA grp1                        ; 3     ; F293: 85 1C
        LDY #$0F                        ; 2     ; F295: A0 0F
        DEX                             ; 2     ; F297: CA
        BNE B1252                       ; 2/3   ; F298: D0 B8
B129A   STA wsync                       ; 3     ; F29A: 85 02
B129C   STX grp0                        ; 3     ; F29C: 86 1B
        STX grp1                        ; 3     ; F29E: 86 1C

; draw activision logo
        LDA saverColorEor               ; 3     ; F2A0: A5 83
        AND saverColorAnd               ; 3     ; F2A2: 25 84
        STA wsync                       ; 3     ; F2A4: 85 02
        STA L0009       ; colubk        ; 4     ; F2A6: 8D 09 00
        EOR #$88                        ; 2     ; F2A9: 49 88
        AND saverColorAnd               ; 3     ; F2AB: 25 84
        STA colup0                      ; 3     ; F2AD: 85 06
        STA colup1                      ; 3     ; F2AF: 85 07
        STX hmclr                       ; 3     ; F2B1: 86 2B
        STX refp0                       ; 3     ; F2B3: 86 0B
        STX refp1                       ; 3     ; F2B5: 86 0C
        LDA #$11                        ; 2     ; F2B7: A9 11
        STA nusiz0                      ; 3     ; F2B9: 85 04
        STA nusiz1                      ; 3     ; F2BB: 85 05
        STA hmp1                        ; 3     ; F2BD: 85 21
        STA resp0                       ; 3     ; F2BF: 85 10
        STA resp1                       ; 3     ; F2C1: 85 11
        LDX #$07                        ; 2     ; F2C3: A2 07
B12C5   STA wsync                       ; 3     ; F2C5: 85 02
        STA hmove                       ; 3     ; F2C7: 85 2A
        LDA activision_0,X              ; 4+    ; F2C9: BD B5 F6
        STA grp0                        ; 3     ; F2CC: 85 1B
        LDA activision_1,X              ; 4+    ; F2CE: BD BD F6
        STA grp1                        ; 3     ; F2D1: 85 1C
        JSR S1651                       ; 6     ; F2D3: 20 51 F6
        LDA activision_3,X              ; 4+    ; F2D6: BD CD F6
        TAY                             ; 2     ; F2D9: A8
        LDA activision_2,X              ; 4+    ; F2DA: BD C5 F6
        STA grp0                        ; 3     ; F2DD: 85 1B
        STY grp1                        ; 3     ; F2DF: 84 1C
        STA hmclr                       ; 3     ; F2E1: 85 2B
        DEX                             ; 2     ; F2E3: CA
        BPL B12C5                       ; 2/3   ; F2E4: 10 DF

; Y is assumed to be 0 based on last value of activision_3,X

; start timing the bottom portion of the screen
        LDA #$21                        ; 2     ; F2E6: A9 21
        STA tim64t                      ; 4     ; F2E8: 8D 96 02
; reset screen saver when button pushed
        LDX swcha                       ; 4     ; F2EB: AE 80 02
        INX                             ; 2     ; F2EE: E8
        BEQ B12F3                       ; 2/3   ; F2EF: F0 02
        STY $9E                         ; 3     ; F2F1: 84 9E
B12F3
; convert paddle counter into new bucket position
        SEC                             ; 2     ; F2F3: 38
        LDA $F7                         ; 3     ; F2F4: A5 F7
        SBC #$05                        ; 2     ; F2F6: E9 05
        BPL B12FB                       ; 2/3   ; F2F8: 10 01
        TYA                             ; 2     ; F2FA: 98
B12FB
; divide position change by two (signed)
        SEC                             ; 2     ; F2FB: 38
        SBC bucketX                     ; 3     ; F2FC: E5 9D
        CLC                             ; 2     ; F2FE: 18
        BPL B1302                       ; 2/3   ; F2FF: 10 01
        SEC                             ; 2     ; F301: 38
B1302   ROR A                           ; 2     ; F302: 6A
; reset screen saver if paddle moves more than +/- 1
        CMP #$02                        ; 2     ; F303: C9 02
        BCC B130D                       ; 2/3   ; F305: 90 06
        CMP #$FE                        ; 2     ; F307: C9 FE
        BCS B130D                       ; 2/3   ; F309: B0 02
        STY $9E                         ; 3     ; F30B: 84 9E
B130D
; add paddle delta to bucket position
        CLC                             ; 2     ; F30D: 18
        ADC bucketX                     ; 3     ; F30E: 65 9D
; keep position in valid range
        CMP $F5                         ; 3     ; F310: C5 F5
        BCC B1316                       ; 2/3   ; F312: 90 02
        LDA $F5                         ; 3     ; F314: A5 F5
B1316   STA bucketX                     ; 3     ; F316: 85 9D
; convert to shift/loop value
        JSR S163D                       ; 6     ; F318: 20 3D F6
        STA $98                         ; 3     ; F31B: 85 98

; build bucket buffers
;   $A1 = number of buckets
;   $C4-$D3 = top bucket
;   $D4-$E3 = center bucket
;   $E4-$F3 = bottom bucket
        LDX #$0F                        ; 2     ; F31D: A2 0F
B131F   LDA bucket_bits,X               ; 4+    ; F31F: BD EC F7
        STA $C4,X                       ; 4     ; F322: 95 C4
        STA $D4,X                       ; 4     ; F324: 95 D4
        STA $E4,X                       ; 4     ; F326: 95 E4
        LDY playerBuckets               ; 3     ; F328: A4 A1
        BEQ B1334                       ; 2/3   ; F32A: F0 08
        DEY                             ; 2     ; F32C: 88
        BEQ B1336                       ; 2/3   ; F32D: F0 07
        DEY                             ; 2     ; F32F: 88
        BEQ B1338                       ; 2/3   ; F330: F0 06
        BNE B133A                       ; 2/3   ; F332: D0 06
B1334   STY $E4,X                       ; 4     ; F334: 94 E4
B1336   STY $D4,X                       ; 4     ; F336: 94 D4
B1338   STY $C4,X                       ; 4     ; F338: 94 C4
B133A   DEX                             ; 2     ; F33A: CA
        BPL B131F                       ; 2/3   ; F33B: 10 E2

; add splash to bucket buffer
        LDY splashingBucket             ; 3     ; F33D: A4 9C
        LDX bucket_offsets,Y            ; 4+    ; F33F: BE E8 F7
        LDA splashFrame                 ; 3     ; F342: A5 AF
        ASL A                           ; 2     ; F344: 0A
        AND #$18                        ; 2     ; F345: 29 18
        TAY                             ; 2     ; F347: A8
        LDA #$07                        ; 2     ; F348: A9 07
        STA $F9                         ; 3     ; F34A: 85 F9
B134C   LDA splash_bits,Y               ; 4+    ; F34C: B9 08 F7
        STA $CC,X                       ; 4     ; F34F: 95 CC
        INY                             ; 2     ; F351: C8
        INX                             ; 2     ; F352: E8
        DEC $F9                         ; 5     ; F353: C6 F9
        BPL B134C                       ; 2/3   ; F355: 10 F5

; wait for bottom of frame to finish
B1357   LDA intim                       ; 4     ; F357: AD 84 02
        BNE B1357                       ; 2/3   ; F35A: D0 FB

; do vsync and start vblank
        LDY #$82                        ; 2     ; F35C: A0 82
        STY wsync                       ; 3     ; F35E: 84 02
        STY vblank                      ; 3     ; F360: 84 01
        STY vsync                       ; 3     ; F362: 84 00
        STY wsync                       ; 3     ; F364: 84 02
        STY wsync                       ; 3     ; F366: 84 02
        STY wsync                       ; 3     ; F368: 84 02
        STA vsync                       ; 3     ; F36A: 85 00

; increment vblank counters
        INC vblankCount                 ; 5     ; F36C: E6 81
        BNE B1377                       ; 2/3   ; F36E: D0 07
        INC $9E                         ; 5     ; F370: E6 9E
        BNE B1377                       ; 2/3   ; F372: D0 03
        SEC                             ; 2     ; F374: 38
        ROR $9E                         ; 5     ; F375: 66 9E

; set values for color vs. b/w and screen saver
B1377   LDY #$FF                        ; 2     ; F377: A0 FF
        LDA swchb                       ; 4     ; F379: AD 82 02
        AND #$08                        ; 2     ; F37C: 29 08
        BNE B1382                       ; 2/3   ; F37E: D0 02
        LDY #$0F                        ; 2     ; F380: A0 0F
B1382   TYA                             ; 2     ; F382: 98
        LDY #$00                        ; 2     ; F383: A0 00
; if screen saver kicked in, change colors
        BIT $9E                         ; 3     ; F385: 24 9E
        BPL B138D                       ; 2/3   ; F387: 10 04
        AND #$F7                        ; 2     ; F389: 29 F7
        LDY $9E                         ; 3     ; F38B: A4 9E
B138D   STY saverColorEor               ; 3     ; F38D: 84 83
        ASL saverColorEor               ; 5     ; F38F: 06 83
        STA saverColorAnd               ; 3     ; F391: 85 84

; start timing vblank
        LDA #$30                        ; 2     ; F393: A9 30
        STA wsync                       ; 3     ; F395: 85 02
        STA tim64t                      ; 4     ; F397: 8D 96 02
        LDY #$00                        ; 2     ; F39A: A0 00
        STY $88                         ; 3     ; F39C: 84 88

; check reset switch
        LDA swchb                       ; 4     ; F39E: AD 82 02
        LSR A                           ; 2     ; F3A1: 4A
        BCS B13B4                       ; 2/3   ; F3A2: B0 10
; reset switch pressed
        JSR clear_vars                  ; 6     ; F3A4: 20 24 F6
; X = $FF
        STX $AD                         ; 3     ; F3A7: 86 AD
        ASL $80                         ; 5     ; F3A9: 06 80
        SEC                             ; 2     ; F3AB: 38
        ROR $80                         ; 5     ; F3AC: 66 80
        LDA #$03                        ; 2     ; F3AE: A9 03
        STA playerBuckets               ; 3     ; F3B0: 85 A1
        STA $A6                         ; 3     ; F3B2: 85 A6
; check select switch
B13B4   LSR A                           ; 2     ; F3B4: 4A
        BCS B13D0                       ; 2/3   ; F3B5: B0 19
; select switch pressed
        LDA $9F                         ; 3     ; F3B7: A5 9F
        BEQ B13BF                       ; 2/3   ; F3B9: F0 04
        DEC $9F                         ; 5     ; F3BB: C6 9F
        BPL B13D2                       ; 2/3   ; F3BD: 10 13
B13BF   INC $80                         ; 5     ; F3BF: E6 80
J13C1   JSR clear_vars                  ; 6     ; F3C1: 20 24 F6
        LDA $80                         ; 3     ; F3C4: A5 80
        AND #$01                        ; 2     ; F3C6: 29 01
        STA $80                         ; 3     ; F3C8: 85 80
        TAY                             ; 2     ; F3CA: A8
        INY                             ; 2     ; F3CB: C8
        STY $A5                         ; 3     ; F3CC: 84 A5
        LDY #$1E                        ; 2     ; F3CE: A0 1E
B13D0   STY $9F                         ; 3     ; F3D0: 84 9F
B13D2   BIT $80                         ; 3     ; F3D2: 24 80
        BPL B13FA                       ; 2/3   ; F3D4: 10 24

        LDA playerBuckets               ; 3     ; F3D6: A5 A1
        BNE B13E2                       ; 2/3   ; F3D8: D0 08
        LDA vblankCount                 ; 3     ; F3DA: A5 81
        AND #$7F                        ; 2     ; F3DC: 29 7F
        BNE B13FA                       ; 2/3   ; F3DE: D0 1A
        BEQ B142A      ; always         ; 2/4   ; F3E0: F0 48

B13E2   LDA expBombFrame                ; 3     ; F3E2: A5 AE
        BEQ B1459                       ; 2/4   ; F3E4: F0 73
        CMP #$20                        ; 2     ; F3E6: C9 20
        BCC B141C                       ; 2/4   ; F3E8: 90 32
        BEQ B13FD                       ; 2/3   ; F3EA: F0 11
B13EC   LDA expBombFrame                ; 3     ; F3EC: A5 AE
        AND #$0C                        ; 2     ; F3EE: 29 0C
        ASL A                           ; 2     ; F3F0: 0A
        ASL A                           ; 2     ; F3F1: 0A
        ADC #<explode_bits              ; 2     ; F3F2: 69 B8
        LDX expBombIndex                ; 3     ; F3F4: A6 AC
        STA $BB,X                       ; 4     ; F3F6: 95 BB
        DEC expBombFrame                ; 5     ; F3F8: C6 AE
B13FA   JMP J159E                       ; 3     ; F3FA: 4C 9E F5

B13FD   LDX expBombIndex                ; 3     ; F3FD: A6 AC
        LDA #$00                        ; 2     ; F3FF: A9 00
        STA $BB,X                       ; 4     ; F401: 95 BB
J1403   LDA #$2B                        ; 2     ; F403: A9 2B
        STA expBombFrame                ; 3     ; F405: 85 AE
        LDX #$08                        ; 2     ; F407: A2 08
        LDA bombCount                   ; 3     ; F409: A5 AB
        BEQ B140F                       ; 2/3   ; F40B: F0 02
        DEC bombCount                   ; 5     ; F40D: C6 AB
B140F   STX expBombIndex                ; 3     ; F40F: 86 AC
        LDA $BB,X                       ; 4     ; F411: B5 BB
        BNE B13EC                       ; 2/4   ; F413: D0 D7
        DEX                             ; 2     ; F415: CA
        BPL B140F                       ; 2/3   ; F416: 10 F7
        LDA #$20                        ; 2     ; F418: A9 20
        STA expBombFrame                ; 3     ; F41A: 85 AE
B141C   DEC expBombFrame                ; 5     ; F41C: C6 AE
        BNE B13FA                       ; 2/4   ; F41E: D0 DA
        LDA soundDuration               ; 3     ; F420: A5 B0
        BNE B1426                       ; 2/3   ; F422: D0 02
        DEC playerBuckets               ; 5     ; F424: C6 A1
B1426   LDA $A6                         ; 3     ; F426: A5 A6
        BEQ B1442                       ; 2/3   ; F428: F0 18

; two players?
B142A   LDA $80                         ; 3     ; F42A: A5 80
        LSR A                           ; 2     ; F42C: 4A
        BCC B1442                       ; 2/3   ; F42D: 90 13

; swap player states (playerBuckets, playerWaveNum, playerScore)
        LDX #$04                        ; 2     ; F42F: A2 04
B1431   LDY playerState,X               ; 4     ; F431: B4 A1
        LDA otherState,X                ; 4     ; F433: B5 A6
        STA playerState,X               ; 4     ; F435: 95 A1
        STY otherState,X                ; 4     ; F437: 94 A6
        DEX                             ; 2     ; F439: CA
        BPL B1431                       ; 2/3   ; F43A: 10 F5

; toggle player number
        LDA playerNum                   ; 3     ; F43C: A5 A0
        EOR #$01                        ; 2     ; F43E: 49 01
        STA playerNum                   ; 3     ; F440: 85 A0

; decrement wave when player starts
B1442   LDX playerWaveNum               ; 3     ; F442: A6 A2
        TXA                             ; 2     ; F444: 8A
        BEQ B1451                       ; 2/3   ; F445: F0 0A
; give them half as many bombs to catch
        DEX                             ; 2     ; F447: CA
        STX playerWaveNum               ; 3     ; F448: 86 A2
        LDA bombs_per_wave,X            ; 4+    ; F44A: BD F3 F6
        LSR A                           ; 2     ; F44D: 4A
        CLC                             ; 2     ; F44E: 18
        ADC #$01                        ; 2     ; F44F: 69 01
B1451   STA bombCount                   ; 3     ; F451: 85 AB
        LDX #$FF                        ; 2     ; F453: A2 FF
        STX $AD                         ; 3     ; F455: 86 AD
        BNE B13FA       ; always        ; 2/4   ; F457: D0 A1

B1459   BIT $AD                         ; 3     ; F459: 24 AD
        BPL B1471                       ; 2/3   ; F45B: 10 14
        LDA swcha                       ; 4     ; F45D: AD 80 02
        LDX playerNum                   ; 3     ; F460: A6 A0
        BEQ B1465                       ; 2/3   ; F462: F0 01
        ASL A                           ; 2     ; F464: 0A
B1465   ASL A                           ; 2     ; F465: 0A
        LDA #$00                        ; 2     ; F466: A9 00
        BCS B146C                       ; 2/3   ; F468: B0 02
        STA $AD                         ; 3     ; F46A: 85 AD
B146C   STA $B1                         ; 3     ; F46C: 85 B1
        JMP J1596                       ; 3     ; F46E: 4C 96 F5

; check for random direction change of bomber every 16 vblanks
B1471   LDA vblankCount                 ; 3     ; F471: A5 81
        AND #$0F                        ; 2     ; F473: 29 0F
        BNE B1482                       ; 2/3   ; F475: D0 0B
        JSR random                      ; 6     ; F477: 20 2E F6
        BCS B1482                       ; 2/3   ; F47A: B0 06
; reverse direction
        LDA bomberDir                   ; 3     ; F47C: A5 9B
        EOR #$FF                        ; 2     ; F47E: 49 FF
        STA bomberDir                   ; 3     ; F480: 85 9B
B1482   BIT $AD                         ; 3     ; F482: 24 AD
        BVS B14B6                       ; 2/3   ; F484: 70 30

; accelerate/decelerate???
        LDA $B1                         ; 3     ; F486: A5 B1
        CMP #$11                        ; 2     ; F488: C9 11
        BCS B14B6                       ; 2/3   ; F48A: B0 2A
        CMP #$02                        ; 2     ; F48C: C9 02
        BCC B14B6                       ; 2/3   ; F48E: 90 26
; move bomber left or right, using wave as DX
; carry assumed set
        LDA playerWaveNum               ; 3     ; F490: A5 A2
        BIT bomberDir                   ; 3     ; F492: 24 9B
        BPL B1499                       ; 2/3   ; F494: 10 03
        EOR #$FF                        ; 2     ; F496: 49 FF
        CLC                             ; 2     ; F498: 18
B1499   ADC bomberX                     ; 3     ; F499: 65 9A
; pin bomber to valid range (5?, 118)
        CMP #$F0                        ; 2     ; F49B: C9 F0
        BCC B14A5                       ; 2/3   ; F49D: 90 06
        LDX #$00                        ; 2     ; F49F: A2 00
        LDA #$05                        ; 2     ; F4A1: A9 05
        BNE B14AD       ; always        ; 2/3   ; F4A3: D0 08
B14A5   CMP #118                        ; 2     ; F4A5: C9 76
        BCC B14AF                       ; 2/3   ; F4A7: 90 06
        LDX #$FF                        ; 2     ; F4A9: A2 FF
        LDA #118                        ; 2     ; F4AB: A9 76
B14AD   STX bomberDir                   ; 3     ; F4AD: 86 9B
B14AF   STA bomberX                     ; 3     ; F4AF: 85 9A
; convert position to loop and move values
        JSR S163D                       ; 6     ; F4B1: 20 3D F6
        STA $99                         ; 3     ; F4B4: 85 99

; check for bomb being caught
B14B6   BIT cxppmm                      ; 3     ; F4B6: 24 07
        BPL B1512                       ; 2/4   ; F4B8: 10 58
; clear the bomb in table
        LDX $F8                         ; 3     ; F4BA: A6 F8
        LDA #$00                        ; 2     ; F4BC: A9 00
        STA $BB,X                       ; 4     ; F4BE: 95 BB
; figure out which bucket to splash
        LDY #$02                        ; 2     ; F4C0: A0 02
        CPX #$06                        ; 2     ; F4C2: E0 06
        BCC B14CA                       ; 2/3   ; F4C4: 90 04
        BEQ B14C9                       ; 2/3   ; F4C6: F0 01
        DEY                             ; 2     ; F4C8: 88
B14C9   DEY                             ; 2     ; F4C9: 88
B14CA   LDX $A1                         ; 3     ; F4CA: A6 A1
        CPX #$02                        ; 2     ; F4CC: E0 02
        BEQ B14D4                       ; 2/3   ; F4CE: F0 04
        BCS B14D8                       ; 2/3   ; F4D0: B0 06
        LDY #$02                        ; 2     ; F4D2: A0 02
B14D4   TYA                             ; 2     ; F4D4: 98
        BNE B14D8                       ; 2/3   ; F4D5: D0 01
        INY                             ; 2     ; F4D7: C8
B14D8   STY splashingBucket             ; 3     ; F4D8: 84 9C
; start splash
        LDA #$10                        ; 2     ; F4DA: A9 10
        STA splashFrame                 ; 3     ; F4DC: 85 AF
; bump score by wave + 1
        SED                             ; 2     ; F4DE: F8
        CLC                             ; 2     ; F4DF: 18
        LDA playerWaveNum               ; 3     ; F4E0: A5 A2
        ADC #$01                        ; 2     ; F4E2: 69 01
        LDX #$02                        ; 2     ; F4E4: A2 02
        LDY playerScore+1               ; 3     ; F4E6: A4 A4
B14E8   ADC playerScore,X               ; 4     ; F4E8: 75 A3
        STA playerScore,X               ; 4     ; F4EA: 95 A3
        LDA #$00                        ; 2     ; F4EC: A9 00
        DEX                             ; 2     ; F4EE: CA
        BPL B14E8                       ; 2/3   ; F4EF: 10 F7
        CLD                             ; 2     ; F4F1: D8
        BCC B14FE                       ; 2/3   ; F4F2: 90 0A
; pin score to 999999 and end game
        STA $A1                         ; 3     ; F4F4: 85 A1
        LDA #$99                        ; 2     ; F4F6: A9 99
        STA playerScore+0               ; 3     ; F4F8: 85 A3
        STA playerScore+1               ; 3     ; F4FA: 85 A4
        STA playerScore+2               ; 3     ; F4FC: 85 A5
; check for score passing 1000
B14FE   TYA                             ; 2     ; F4FE: 98
        EOR playerScore+1               ; 3     ; F4FF: 45 A4
        AND #$F0                        ; 2     ; F501: 29 F0
        BEQ B1512                       ; 2/3   ; F503: F0 0D
; award extra bucket if possible
        LDX $A1                         ; 3     ; F505: A6 A1
        INX                             ; 2     ; F507: E8
        CPX #$04                        ; 2     ; F508: E0 04
        BCS B150E                       ; 2/3   ; F50A: B0 02
        STX $A1                         ; 3     ; F50C: 86 A1
; make award sound play
B150E   LDA #$3F                        ; 2     ; F50E: A9 3F
        STA soundDuration               ; 3     ; F510: 85 B0

; check for bomb missed?
B1512   LDX $F6                         ; 3     ; F512: A6 F6
        LDA $BB,X                       ; 4     ; F514: B5 BB
        BEQ B1528                       ; 2/3   ; F516: F0 10
        LDX #$08                        ; 2     ; F518: A2 08
B151A   LDA $BB,X                       ; 4     ; F51A: B5 BB
        BEQ B1522                       ; 2/3   ; F51C: F0 04
        LDA #<bomb_bits                 ; 2     ; F51E: A9 78
        STA $BB,X                       ; 4     ; F520: 95 BB
B1522   DEX                             ; 2     ; F522: CA
        BPL B151A                       ; 2/3   ; F523: 10 F5
        JMP J1403                       ; 3     ; F525: 4C 03 F4

; update all bomb frame animations
B1528   LDX #$08                        ; 2     ; F528: A2 08
B152A   LDA $BB,X                       ; 4     ; F52A: B5 BB
        BEQ B153F                       ; 2/3   ; F52C: F0 11
        DEC $88                         ; 5     ; F52E: C6 88
        JSR random                      ; 6     ; F530: 20 2E F6
        EOR vblankCount                 ; 3     ; F533: 45 81
        AND #$03                        ; 2     ; F535: 29 03
        ASL A                           ; 2     ; F537: 0A
        ASL A                           ; 2     ; F538: 0A
        ASL A                           ; 2     ; F539: 0A
        ASL A                           ; 2     ; F53A: 0A
        ADC #<bomb_bits                 ; 2     ; F53B: 69 78
        STA $BB,X                       ; 4     ; F53D: 95 BB
B153F   DEX                             ; 2     ; F53F: CA
        BPL B152A                       ; 2/3   ; F540: 10 E8

; bomb DY or Y phase adjusted by wave number? (1, 1, 2, 2, 3, 3, 4, 4)
        LDA playerWaveNum               ; 3     ; F542: A5 A2
        LSR A                           ; 2     ; F544: 4A
        CLC                             ; 2     ; F545: 18
        ADC #$01                        ; 2     ; F546: 69 01
        ADC $B1                         ; 3     ; F548: 65 B1
        STA $B1                         ; 3     ; F54A: 85 B1
        SEC                             ; 2     ; F54C: 38
        SBC #$12                        ; 2     ; F54D: E9 12
        BCC J159E                       ; 2/3   ; F54F: 90 4D
        STA $B1                         ; 3     ; F551: 85 B1

; shift bomb buffers to make room for new bomb
        LDX #$07                        ; 2     ; F553: A2 07
B1555   LDA $B2,X                       ; 4     ; F555: B5 B2
        STA $B3,X                       ; 4     ; F557: 95 B3
        LDA $BB,X                       ; 4     ; F559: B5 BB
        STA $BC,X                       ; 4     ; F55B: 95 BC
        DEX                             ; 2     ; F55D: CA
        BPL B1555                       ; 2/3   ; F55E: 10 F5
        LDA #$00                        ; 2     ; F560: A9 00
        STA $BB                         ; 3     ; F562: 85 BB

        LDX playerWaveNum               ; 3     ; F564: A6 A2
        BIT $AD                         ; 3     ; F566: 24 AD
        BVC B1579                       ; 2/3   ; F568: 50 0F
        LDA $88                         ; 3     ; F56A: A5 88
        ORA splashFrame                 ; 3     ; F56C: 05 AF
        BNE J159E                       ; 2/3   ; F56E: D0 2E
        ASL $AD                         ; 5     ; F570: 06 AD
; clamp wave to 7
        CPX #$07                        ; 2     ; F572: E0 07
        BCS B1579                       ; 2/3   ; F574: B0 03
        INX                             ; 2     ; F576: E8
        STX playerWaveNum               ; 3     ; F577: 86 A2
B1579   TXA                             ; 2     ; F579: 8A
        LSR A                           ; 2     ; F57A: 4A
        BCS B1581                       ; 2/3   ; F57B: B0 04
        LDA $BC                         ; 3     ; F57D: A5 BC
        BNE J159E                       ; 2/3   ; F57F: D0 1D
B1581   INC bombCount                   ; 5     ; F581: E6 AB
        LDA bombCount                   ; 3     ; F583: A5 AB
        CMP bombs_per_wave,X            ; 4+    ; F585: DD F3 F6
        BCC B1592                       ; 2/3   ; F588: 90 08
        LDA #$00                        ; 2     ; F58A: A9 00
        STA bombCount                   ; 3     ; F58C: 85 AB
        LDA #$7F                        ; 2     ; F58E: A9 7F
        STA $AD                         ; 3     ; F590: 85 AD
; use random seed & 0x08 to flip bomb horizontally
B1592   LDA randomSeed                  ; 3     ; F592: A5 82
        AND #$08                        ; 2     ; F594: 29 08
J1596   ORA $99                         ; 3     ; F596: 05 99
        STA $B2                         ; 3     ; F598: 85 B2
        LDA #<bomb_bits                 ; 2     ; F59A: A9 78
        STA $BB                         ; 3     ; F59C: 85 BB
J159E   JSR random                      ; 6     ; F59E: 20 2E F6
        AND #$03                        ; 2     ; F5A1: 29 03
        TAX                             ; 2     ; F5A3: AA
        LDY #$00                        ; 2     ; F5A4: A0 00
        LDA $88                         ; 3     ; F5A6: A5 88
        BEQ B15B2                       ; 2/3   ; F5A8: F0 08
        TXA                             ; 2     ; F5AA: 8A
        LSR A                           ; 2     ; F5AB: 4A
        ADC #$01                        ; 2     ; F5AC: 69 01
        STA audv0                       ; 3     ; F5AE: 85 19
        LDY #$08                        ; 2     ; F5B0: A0 08
B15B2   LDA splashFrame                 ; 3     ; F5B2: A5 AF
        BEQ B15C5                       ; 2/3   ; F5B4: F0 0F
        LDY #$08                        ; 2     ; F5B6: A0 08
        DEC splashFrame                 ; 5     ; F5B8: C6 AF
        CMP #$0F                        ; 2     ; F5BA: C9 0F
        BCC B15C2                       ; 2/3   ; F5BC: 90 04
        LDY #$0C                        ; 2     ; F5BE: A0 0C
        SBC playerWaveNum               ; 3     ; F5C0: E5 A2
B15C2   TAX                             ; 2     ; F5C2: AA
        STY audv0                       ; 3     ; F5C3: 84 19
B15C5
        LDA expBombFrame                ; 3     ; F5C5: A5 AE
        BEQ B15D8                       ; 2/3   ; F5C7: F0 0F
; play bomb explosion sound
        LDY #$08                        ; 2     ; F5C9: A0 08
        LDX #$08                        ; 2     ; F5CB: A2 08
        ADC expBombIndex                ; 3     ; F5CD: 65 AC
        CMP #$20                        ; 2     ; F5CF: C9 20
        BCS B15D6                       ; 2/3   ; F5D1: B0 03
        LSR A                           ; 2     ; F5D3: 4A
        LDX #$1F                        ; 2     ; F5D4: A2 1F
B15D6   STA audv0                       ; 3     ; F5D6: 85 19
B15D8
        LDA soundDuration               ; 3     ; F5D8: A5 B0
        BEQ B15E8                       ; 2/3   ; F5DA: F0 0C
        DEC soundDuration               ; 5     ; F5DC: C6 B0
        TAX                             ; 2     ; F5DE: AA
        LSR A                           ; 2     ; F5DF: 4A
        LSR A                           ; 2     ; F5E0: 4A
        BCC B15E4                       ; 2/3   ; F5E1: 90 01
        TAX                             ; 2     ; F5E3: AA
B15E4   LDY #$0C                        ; 2     ; F5E4: A0 0C
        STY audv0                       ; 3     ; F5E6: 84 19
B15E8   STX audf0                       ; 3     ; F5E8: 86 17
        STY audc0                       ; 3     ; F5EA: 84 15

; build score digit pointers
        LDY #$02                        ; 2     ; F5EC: A0 02
B15EE   TYA                             ; 2     ; F5EE: 98
        ASL A                           ; 2     ; F5EF: 0A
        ASL A                           ; 2     ; F5F0: 0A
        TAX                             ; 2     ; F5F1: AA
        LDA L00A3,Y                     ; 4+    ; F5F2: B9 A3 00
        AND #$F0                        ; 2     ; F5F5: 29 F0
        LSR A                           ; 2     ; F5F7: 4A
        ADC #<digit_bits                ; 2     ; F5F8: 69 28
        STA $F4,X                       ; 4     ; F5FA: 95 F4
        LDA L00A3,Y                     ; 4+    ; F5FC: B9 A3 00
        AND #$0F                        ; 2     ; F5FF: 29 0F
        ASL A                           ; 2     ; F601: 0A
        ASL A                           ; 2     ; F602: 0A
        ASL A                           ; 2     ; F603: 0A
        ADC #<digit_bits                ; 2     ; F604: 69 28
        STA $F6,X                       ; 4     ; F606: 95 F6
        LDA #$F7                        ; 2     ; F608: A9 F7
        STA $F5,X                       ; 4     ; F60A: 95 F5
        STA $F7,X                       ; 4     ; F60C: 95 F7
        DEY                             ; 2     ; F60E: 88
        BPL B15EE                       ; 2/4   ; F60F: 10 DD

; clear leading zeroes from score
        LDX #$00                        ; 2     ; F611: A2 00
B1613   LDA $F4,X                       ; 4     ; F613: B5 F4
        EOR #<digit_bits                ; 2     ; F615: 49 28
        BNE B1621                       ; 2/3   ; F617: D0 08
        STA $F4,X                       ; 4     ; F619: 95 F4
        INX                             ; 2     ; F61B: E8
        INX                             ; 2     ; F61C: E8
        CPX #$0A                        ; 2     ; F61D: E0 0A
        BCC B1613                       ; 2/3   ; F61F: 90 F2
B1621   JMP J100E                       ; 3     ; F621: 4C 0E F0

; clear zpage vars ($9E-$C3)
clear_vars
        LDA #$00                        ; 2     ; F624: A9 00
        LDX #$25                        ; 2     ; F626: A2 25
B1628   STA $9E,X                       ; 4     ; F628: 95 9E
        DEX                             ; 2     ; F62A: CA
        BPL B1628                       ; 2/3   ; F62B: 10 FB
        RTS                             ; 6     ; F62D: 60

; pseudo random number generator
random  LSR randomSeed                  ; 5     ; F62E: 46 82
        ROL A                           ; 2     ; F630: 2A
        EOR randomSeed                  ; 3     ; F631: 45 82
        LSR A                           ; 2     ; F633: 4A
        LDA randomSeed                  ; 3     ; F634: A5 82
        BCS B163C                       ; 2/3   ; F636: B0 04
        ORA #$40                        ; 2     ; F638: 09 40
        STA randomSeed                  ; 3     ; F63A: 85 82
B163C   RTS                             ; 6     ; F63C: 60

; convert x position into loop and move values
S163D   LDY #$FF                        ; 2     ; F63D: A0 FF
        SEC                             ; 2     ; F63F: 38
B1640   INY                             ; 2     ; F640: C8
        SBC #$0F                        ; 2     ; F641: E9 0F
        BCS B1640                       ; 2/3   ; F643: B0 FB
        STY $F9                         ; 3     ; F645: 84 F9
        EOR #$FF                        ; 2     ; F647: 49 FF
        ADC #$09                        ; 2     ; F649: 69 09
        ASL A                           ; 2     ; F64B: 0A
        ASL A                           ; 2     ; F64C: 0A
        ASL A                           ; 2     ; F64D: 0A
        ASL A                           ; 2     ; F64E: 0A
        ORA $F9                         ; 3     ; F64F: 05 F9
S1651   RTS                             ; 6     ; F651: 60

bomber_colors
        dc.b    $02                             ; F652: 02
        dc.b    $02                             ; F653: 02
        dc.b    $3A                             ; F654: 3A
        dc.b    $3A                             ; F655: 3A
        dc.b    $3A                             ; F656: 3A
        dc.b    $0C                             ; F657: 0C
        dc.b    $02                             ; F658: 02
        dc.b    $0C                             ; F659: 0C
        dc.b    $02                             ; F65A: 02
        dc.b    $0C                             ; F65B: 0C
        dc.b    $02                             ; F65C: 02
        dc.b    $0C                             ; F65D: 0C
        dc.b    $02                             ; F65E: 02
        dc.b    $0C                             ; F65F: 0C
        dc.b    $02                             ; F660: 02
        dc.b    $0C                             ; F661: 0C
        dc.b    $02                             ; F662: 02
        dc.b    $0C                             ; F663: 0C
        dc.b    $02                             ; F664: 02
        dc.b    $38                             ; F665: 38
        dc.b    $3A                             ; F666: 3A
        dc.b    $3A                             ; F667: 3A
        dc.b    $3A                             ; F668: 3A
        dc.b    $3A                             ; F669: 3A
        dc.b    $3A                             ; F66A: 3A
        dc.b    $38                             ; F66B: 38
        dc.b    $02                             ; F66C: 02
        dc.b    $02                             ; F66D: 02
        dc.b    $02                             ; F66E: 02
        dc.b    $14                             ; F66F: 14
        dc.b    $12                             ; F670: 12
        dc.b    $10                             ; F671: 10

color_table
        dc.b    $06     ; background top        ; F672: 06
        dc.b    $D4     ; background center     ; F673: D4
        dc.b    $1A     ; player 0 score        ; F674: 1A
        dc.b    $42     ; player 1 score        ; F675: 42
        dc.b    $00     ; bomb colors           ; F676: 00
        dc.b    $02                             ; F677: 02
        dc.b    $04                             ; F678: 04
        dc.b    $06                             ; F679: 06
        dc.b    $06                             ; F67A: 06
        dc.b    $04                             ; F67B: 04
        dc.b    $02                             ; F67C: 02
        dc.b    $00                             ; F67D: 00
        dc.b    $08                             ; F67E: 08
        dc.b    $08                             ; F67F: 08
        dc.b    $08                             ; F680: 08
        dc.b    $08                             ; F681: 08
        dc.b    $4E                             ; F682: 4E
        dc.b    $4E                             ; F683: 4E
        dc.b    $4E                             ; F684: 4E

; bucket/splash colors
bucket_colors
        dc.b    $12                             ; F685: 12
        dc.b    $12                             ; F686: 12
        dc.b    $14                             ; F687: 14
        dc.b    $14                             ; F688: 14
        dc.b    $16                             ; F689: 16
        dc.b    $16                             ; F68A: 16
        dc.b    $88                             ; F68B: 88
        dc.b    $16                             ; F68C: 16
        dc.b    $88                             ; F68D: 88
        dc.b    $88                             ; F68E: 88
        dc.b    $88                             ; F68F: 88
        dc.b    $88                             ; F690: 88
        dc.b    $88                             ; F691: 88
        dc.b    $88                             ; F692: 88
        dc.b    $88                             ; F693: 88
        dc.b    $88                             ; F694: 88

        dc.b    $12                             ; F695: 12
        dc.b    $12                             ; F696: 12
        dc.b    $14                             ; F697: 14
        dc.b    $14                             ; F698: 14
        dc.b    $16                             ; F699: 16
        dc.b    $16                             ; F69A: 16
        dc.b    $88                             ; F69B: 88
        dc.b    $16                             ; F69C: 16
        dc.b    $88                             ; F69D: 88
        dc.b    $88                             ; F69E: 88
        dc.b    $88                             ; F69F: 88
        dc.b    $88                             ; F6A0: 88
        dc.b    $88                             ; F6A1: 88
        dc.b    $88                             ; F6A2: 88
        dc.b    $88                             ; F6A3: 88
        dc.b    $88                             ; F6A4: 88

        dc.b    $12                             ; F6A5: 12
        dc.b    $12                             ; F6A6: 12
        dc.b    $14                             ; F6A7: 14
        dc.b    $14                             ; F6A8: 14
        dc.b    $16                             ; F6A9: 16
        dc.b    $16                             ; F6AA: 16
        dc.b    $88                             ; F6AB: 88
        dc.b    $16                             ; F6AC: 16
        dc.b    $88                             ; F6AD: 88
        dc.b    $88                             ; F6AE: 88
        dc.b    $88                             ; F6AF: 88
        dc.b    $88                             ; F6B0: 88
        dc.b    $88                             ; F6B1: 88
        dc.b    $88                             ; F6B2: 88
        dc.b    $88                             ; F6B3: 88
        dc.b    $88                             ; F6B4: 88

activision_0
        dc.b    %00000000                       ; F6B5: 00
        dc.b    %10101101                       ; F6B6: AD
        dc.b    %10101001                       ; F6B7: A9
        dc.b    %11101001                       ; F6B8: E9
        dc.b    %10101001                       ; F6B9: A9
        dc.b    %11101101                       ; F6BA: ED
        dc.b    %01000001                       ; F6BB: 41
        dc.b    %00001111                       ; F6BC: 0F

activision_1
        dc.b    %00000000                       ; F6BD: 00
        dc.b    %01010000                       ; F6BE: 50
        dc.b    %01011000                       ; F6BF: 58
        dc.b    %01011100                       ; F6C0: 5C
        dc.b    %01010110                       ; F6C1: 56
        dc.b    %01010011                       ; F6C2: 53
        dc.b    %00010001                       ; F6C3: 11
        dc.b    %11110000                       ; F6C4: F0

activision_2
        dc.b    %00000000                       ; F6C5: 00
        dc.b    %10111010                       ; F6C6: BA
        dc.b    %10001010                       ; F6C7: 8A
        dc.b    %10111010                       ; F6C8: BA
        dc.b    %10100010                       ; F6C9: A2
        dc.b    %00111010                       ; F6CA: 3A
        dc.b    %10000000                       ; F6CB: 80
        dc.b    %11111110                       ; F6CC: FE

activision_3
        dc.b    %00000000                       ; F6CD: 00
        dc.b    %11101001                       ; F6CE: E9
        dc.b    %10101011                       ; F6CF: AB
        dc.b    %10101111                       ; F6D0: AF
        dc.b    %10101101                       ; F6D1: AD
        dc.b    %11101001                       ; F6D2: E9
; shares next two $00's with bomber_bits

bomber_bits
        dc.b    %00000000                       ; F6D3: 00
        dc.b    %00000000                       ; F6D4: 00
        dc.b    %01000100                       ; F6D5: 44
        dc.b    %10000010                       ; F6D6: 82
        dc.b    %10000010                       ; F6D7: 82
        dc.b    %10111010                       ; F6D8: BA
        dc.b    %11010110                       ; F6D9: D6
        dc.b    %10111010                       ; F6DA: BA
        dc.b    %11010110                       ; F6DB: D6
        dc.b    %10111010                       ; F6DC: BA
        dc.b    %11010110                       ; F6DD: D6
        dc.b    %10111010                       ; F6DE: BA
        dc.b    %11111110                       ; F6DF: FE
        dc.b    %11111110                       ; F6E0: FE
        dc.b    %11111110                       ; F6E1: FE
        dc.b    %11111110                       ; F6E2: FE
        dc.b    %11111110                       ; F6E3: FE
        dc.b    %01111100                       ; F6E4: 7C
        dc.b    %00111000                       ; F6E5: 38
        dc.b    %00111000                       ; F6E6: 38
        dc.b    %00111000                       ; F6E7: 38
        dc.b    %01101100                       ; F6E8: 6C
        dc.b    %01010100                       ; F6E9: 54
        dc.b    %01111100                       ; F6EA: 7C
        dc.b    %01101100                       ; F6EB: 6C
        dc.b    %11101110                       ; F6EC: EE
        dc.b    %11111110                       ; F6ED: FE
        dc.b    %11010110                       ; F6EE: D6
        dc.b    %01111100                       ; F6EF: 7C
        dc.b    %01111100                       ; F6F0: 7C
        dc.b    %01111100                       ; F6F1: 7C
        dc.b    %00111000                       ; F6F2: 38

bombs_per_wave
        dc.b    9                               ; F6F3: 09
        dc.b    20                              ; F6F4: 14
        dc.b    30                              ; F6F5: 1E
        dc.b    40                              ; F6F6: 28
        dc.b    50                              ; F6F7: 32
        dc.b    75                              ; F6F8: 4B
        dc.b    100                             ; F6F9: 64
        dc.b    150                             ; F6FA: 96

; ???
        dc.b    $FF                             ; F6FB: FF
        dc.b    $FF                             ; F6FC: FF
        dc.b    $F0                             ; F6FD: F0
        dc.b    $00                             ; F6FE: 00
B16FF   dc.b    $00                             ; F6FF: 00

; space used to clear leading zeroes of score
;   also used as bits for missing bomb_bits
;   (assumed to be on same page as digit_bits, at XX00)
        dc.b    $00                             ; F700: 00
        dc.b    $00                             ; F701: 00
        dc.b    $00                             ; F702: 00
        dc.b    $00                             ; F703: 00
        dc.b    $00                             ; F704: 00
        dc.b    $00                             ; F705: 00
        dc.b    $00                             ; F706: 00
        dc.b    $00                             ; F707: 00

splash_bits
        dc.b    %00000000                       ; F708: 00
        dc.b    %00000000                       ; F709: 00
        dc.b    %00000000                       ; F70A: 00
        dc.b    %00000000                       ; F70B: 00
        dc.b    %00000000                       ; F70C: 00
        dc.b    %00000000                       ; F70D: 00
        dc.b    %00000000                       ; F70E: 00
        dc.b    %00000000                       ; F70F: 00

        dc.b    %10010010                       ; F710: 92
        dc.b    %00000000                       ; F711: 00
        dc.b    %00111000                       ; F712: 38
        dc.b    %00010000                       ; F713: 10
        dc.b    %10000010                       ; F714: 82
        dc.b    %00101000                       ; F715: 28
        dc.b    %00000000                       ; F716: 00
        dc.b    %00000000                       ; F717: 00

        dc.b    %00010000                       ; F718: 10
        dc.b    %00010000                       ; F719: 10
        dc.b    %01000100                       ; F71A: 44
        dc.b    %10010010                       ; F71B: 92
        dc.b    %00010000                       ; F71C: 10
        dc.b    %00000000                       ; F71D: 00
        dc.b    %01000100                       ; F71E: 44
        dc.b    %00000000                       ; F71F: 00

        dc.b    %00000000                       ; F720: 00
        dc.b    %10010010                       ; F721: 92
        dc.b    %00010000                       ; F722: 10
        dc.b    %00000000                       ; F723: 00
        dc.b    %00010000                       ; F724: 10
        dc.b    %10000010                       ; F725: 82
        dc.b    %00000000                       ; F726: 00
        dc.b    %00000000                       ; F727: 00

digit_bits
        dc.b    %00111100                       ; F728: 3C
        dc.b    %01100110                       ; F729: 66
        dc.b    %01100110                       ; F72A: 66
        dc.b    %01100110                       ; F72B: 66
        dc.b    %01100110                       ; F72C: 66
        dc.b    %01100110                       ; F72D: 66
        dc.b    %01100110                       ; F72E: 66
        dc.b    %00111100                       ; F72F: 3C

        dc.b    %00111100                       ; F730: 3C
        dc.b    %00011000                       ; F731: 18
        dc.b    %00011000                       ; F732: 18
        dc.b    %00011000                       ; F733: 18
        dc.b    %00011000                       ; F734: 18
        dc.b    %00011000                       ; F735: 18
        dc.b    %00111000                       ; F736: 38
        dc.b    %00011000                       ; F737: 18

        dc.b    %01111110                       ; F738: 7E
        dc.b    %01100000                       ; F739: 60
        dc.b    %01100000                       ; F73A: 60
        dc.b    %00111100                       ; F73B: 3C
        dc.b    %00000110                       ; F73C: 06
        dc.b    %00000110                       ; F73D: 06
        dc.b    %01000110                       ; F73E: 46
        dc.b    %00111100                       ; F73F: 3C

        dc.b    %00111100                       ; F740: 3C
        dc.b    %01000110                       ; F741: 46
        dc.b    %00000110                       ; F742: 06
        dc.b    %00001100                       ; F743: 0C
        dc.b    %00001100                       ; F744: 0C
        dc.b    %00000110                       ; F745: 06
        dc.b    %01000110                       ; F746: 46
        dc.b    %00111100                       ; F747: 3C

        dc.b    %00001100                       ; F748: 0C
        dc.b    %00001100                       ; F749: 0C
        dc.b    %00001100                       ; F74A: 0C
        dc.b    %01111110                       ; F74B: 7E
        dc.b    %01001100                       ; F74C: 4C
        dc.b    %00101100                       ; F74D: 2C
        dc.b    %00011100                       ; F74E: 1C
        dc.b    %00001100                       ; F74F: 0C

        dc.b    %01111100                       ; F750: 7C
        dc.b    %01000110                       ; F751: 46
        dc.b    %00000110                       ; F752: 06
        dc.b    %00000110                       ; F753: 06
        dc.b    %01111100                       ; F754: 7C
        dc.b    %01100000                       ; F755: 60
        dc.b    %01100000                       ; F756: 60
        dc.b    %01111110                       ; F757: 7E

        dc.b    %00111100                       ; F758: 3C
        dc.b    %01100110                       ; F759: 66
        dc.b    %01100110                       ; F75A: 66
        dc.b    %01100110                       ; F75B: 66
        dc.b    %01111100                       ; F75C: 7C
        dc.b    %01100000                       ; F75D: 60
        dc.b    %01100010                       ; F75E: 62
        dc.b    %00111100                       ; F75F: 3C

        dc.b    %00011000                       ; F760: 18
        dc.b    %00011000                       ; F761: 18
        dc.b    %00011000                       ; F762: 18
        dc.b    %00011000                       ; F763: 18
        dc.b    %00001100                       ; F764: 0C
        dc.b    %00000110                       ; F765: 06
        dc.b    %01000010                       ; F766: 42
        dc.b    %01111110                       ; F767: 7E

        dc.b    %00111100                       ; F768: 3C
        dc.b    %01100110                       ; F769: 66
        dc.b    %01100110                       ; F76A: 66
        dc.b    %00111100                       ; F76B: 3C
        dc.b    %00111100                       ; F76C: 3C
        dc.b    %01100110                       ; F76D: 66
        dc.b    %01100110                       ; F76E: 66
        dc.b    %00111100                       ; F76F: 3C

        dc.b    %00111100                       ; F770: 3C
        dc.b    %01000110                       ; F771: 46
        dc.b    %00000110                       ; F772: 06
        dc.b    %00111110                       ; F773: 3E
        dc.b    %01100110                       ; F774: 66
        dc.b    %01100110                       ; F775: 66
        dc.b    %01100110                       ; F776: 66
        dc.b    %00111100                       ; F777: 3C

bomb_bits
        dc.b    %00000000                       ; F778: 00
        dc.b    %00010000                       ; F779: 10
        dc.b    %00111000                       ; F77A: 38
        dc.b    %00111000                       ; F77B: 38
        dc.b    %01111100                       ; F77C: 7C
        dc.b    %01111100                       ; F77D: 7C
        dc.b    %00111000                       ; F77E: 38
        dc.b    %00111000                       ; F77F: 38
        dc.b    %00010000                       ; F780: 10
        dc.b    %00001000                       ; F781: 08
        dc.b    %00001000                       ; F782: 08
        dc.b    %00010000                       ; F783: 10
        dc.b    %00100000                       ; F784: 20
        dc.b    %00000000                       ; F785: 00
        dc.b    %00000000                       ; F786: 00
        dc.b    %00000000                       ; F787: 00

        dc.b    %00000000                       ; F788: 00
        dc.b    %00010000                       ; F789: 10
        dc.b    %00111000                       ; F78A: 38
        dc.b    %00111000                       ; F78B: 38
        dc.b    %01111100                       ; F78C: 7C
        dc.b    %01111100                       ; F78D: 7C
        dc.b    %00111000                       ; F78E: 38
        dc.b    %00111000                       ; F78F: 38
        dc.b    %00010000                       ; F790: 10
        dc.b    %00001000                       ; F791: 08
        dc.b    %00001000                       ; F792: 08
        dc.b    %00010000                       ; F793: 10
        dc.b    %00100000                       ; F794: 20
        dc.b    %00100000                       ; F795: 20
        dc.b    %00000000                       ; F796: 00
        dc.b    %00000000                       ; F797: 00

        dc.b    %00000000                       ; F798: 00
        dc.b    %00010000                       ; F799: 10
        dc.b    %00111000                       ; F79A: 38
        dc.b    %00111000                       ; F79B: 38
        dc.b    %01111100                       ; F79C: 7C
        dc.b    %01111100                       ; F79D: 7C
        dc.b    %00111000                       ; F79E: 38
        dc.b    %00111000                       ; F79F: 38
        dc.b    %00010000                       ; F7A0: 10
        dc.b    %00001000                       ; F7A1: 08
        dc.b    %00001000                       ; F7A2: 08
        dc.b    %00010000                       ; F7A3: 10
        dc.b    %00100000                       ; F7A4: 20
        dc.b    %00100000                       ; F7A5: 20
        dc.b    %00110000                       ; F7A6: 30
        dc.b    %00010000                       ; F7A7: 10

        dc.b    %00000000                       ; F7A8: 00
        dc.b    %00010000                       ; F7A9: 10
        dc.b    %00111000                       ; F7AA: 38
        dc.b    %00111000                       ; F7AB: 38
        dc.b    %01111100                       ; F7AC: 7C
        dc.b    %01111100                       ; F7AD: 7C
        dc.b    %00111000                       ; F7AE: 38
        dc.b    %00111000                       ; F7AF: 38
        dc.b    %00010000                       ; F7B0: 10
        dc.b    %00001000                       ; F7B1: 08
        dc.b    %00001000                       ; F7B2: 08
        dc.b    %00010000                       ; F7B3: 10
        dc.b    %00100000                       ; F7B4: 20
        dc.b    %00100000                       ; F7B5: 20
        dc.b    %01100000                       ; F7B6: 60
        dc.b    %00100000                       ; F7B7: 20

explode_bits
        dc.b    %00000000                       ; F7B8: 00
        dc.b    %00010100                       ; F7B9: 14
        dc.b    %10010001                       ; F7BA: 91
        dc.b    %01011010                       ; F7BB: 5A
        dc.b    %01111110                       ; F7BC: 7E
        dc.b    %00111100                       ; F7BD: 3C
        dc.b    %00011101                       ; F7BE: 1D
        dc.b    %10111000                       ; F7BF: B8
        dc.b    %00111100                       ; F7C0: 3C
        dc.b    %01111110                       ; F7C1: 7E
        dc.b    %01011001                       ; F7C2: 59
        dc.b    %10011100                       ; F7C3: 9C
        dc.b    %00010100                       ; F7C4: 14
        dc.b    %00010010                       ; F7C5: 12
        dc.b    %10100000                       ; F7C6: A0
        dc.b    %00000100                       ; F7C7: 04

        dc.b    %00000000                       ; F7C8: 00
        dc.b    %00000000                       ; F7C9: 00
        dc.b    %01010010                       ; F7CA: 52
        dc.b    %00011000                       ; F7CB: 18
        dc.b    %00111100                       ; F7CC: 3C
        dc.b    %00111100                       ; F7CD: 3C
        dc.b    %00011100                       ; F7CE: 1C
        dc.b    %00111000                       ; F7CF: 38
        dc.b    %01111100                       ; F7D0: 7C
        dc.b    %01111110                       ; F7D1: 7E
        dc.b    %01011000                       ; F7D2: 58
        dc.b    %00011100                       ; F7D3: 1C
        dc.b    %01010100                       ; F7D4: 54
        dc.b    %00000000                       ; F7D5: 00
        dc.b    %00000010                       ; F7D6: 02
        dc.b    %00000000                       ; F7D7: 00

        dc.b    %00000000                       ; F7D8: 00
        dc.b    %00000000                       ; F7D9: 00
        dc.b    %00000000                       ; F7DA: 00
        dc.b    %00000000                       ; F7DB: 00
        dc.b    %00000000                       ; F7DC: 00
        dc.b    %00011000                       ; F7DD: 18
        dc.b    %00111100                       ; F7DE: 3C
        dc.b    %00111100                       ; F7DF: 3C
        dc.b    %00011000                       ; F7E0: 18
        dc.b    %00111100                       ; F7E1: 3C
        dc.b    %00111100                       ; F7E2: 3C
        dc.b    %00011000                       ; F7E3: 18
        dc.b    %00000000                       ; F7E4: 00
        dc.b    %00000000                       ; F7E5: 00
        dc.b    %00000000                       ; F7E6: 00
        dc.b    %00000000                       ; F7E7: 00

; offset to each bucket for adding splash
bucket_offsets
        dc.b    $00                             ; F7E8: 00
        dc.b    $10                             ; F7E9: 10
        dc.b    $20                             ; F7EA: 20
        dc.b    $30                             ; F7EB: 30

bucket_bits
        dc.b    %11111110                       ; F7EC: FE
        dc.b    %10101010                       ; F7ED: AA
        dc.b    %10101010                       ; F7EE: AA
        dc.b    %10101010                       ; F7EF: AA
        dc.b    %10101010                       ; F7F0: AA
        dc.b    %10101010                       ; F7F1: AA
        dc.b    %01111000                       ; F7F2: 78
        dc.b    %01111100                       ; F7F3: 7C

        dc.b    %00000000                       ; F7F4: 00
        dc.b    %00000000                       ; F7F5: 00
        dc.b    %00000000                       ; F7F6: 00
        dc.b    %00000000                       ; F7F7: 00
        dc.b    %00000000                       ; F7F8: 00
        dc.b    %00000000                       ; F7F9: 00
        dc.b    %00000000                       ; F7FA: 00
        dc.b    %00000000                       ; F7FB: 00

        dc.w	reset                           ; F7FC: 00 F0
        dc.w    $0000                           ; F7FE: 00 00
